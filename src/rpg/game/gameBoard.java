package rpg.game;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.Timer;
import rpg.game.characters.Hunter;
import rpg.game.characters.Mage;
import rpg.game.characters.Player;
import rpg.game.characters.Warrior;

public class gameBoard extends javax.swing.JFrame {
  
    public gameBoard() {
        initComponents();
        playerName.setText(playerNameStr);
        characterClass.setText(characterClassStr);
        createCharacter();
        createEnemies();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        attackLabel = new javax.swing.JLabel();
        HPLabel = new javax.swing.JLabel();
        initiativeLabel = new javax.swing.JLabel();
        addAttackButton = new javax.swing.JButton();
        addHpButton = new javax.swing.JButton();
        addInitiativeButton = new javax.swing.JButton();
        numberOfAttackLabel = new javax.swing.JLabel();
        numberOfHpLabel = new javax.swing.JLabel();
        numberOfInitiativeLabel = new javax.swing.JLabel();
        skillpoints = new javax.swing.JLabel();
        playerProgressBar = new javax.swing.JProgressBar();
        playerPicture = new javax.swing.JLabel();
        enemyProgressBar = new javax.swing.JProgressBar();
        enemyPicture = new javax.swing.JLabel();
        playerName = new javax.swing.JLabel();
        enemyPlayerName = new javax.swing.JLabel();
        mageLev1 = new javax.swing.JButton();
        hunterLev1 = new javax.swing.JButton();
        warriorLev1 = new javax.swing.JButton();
        mages = new javax.swing.JLabel();
        hunters = new javax.swing.JLabel();
        warriors = new javax.swing.JLabel();
        characterClass = new javax.swing.JLabel();
        ball = new javax.swing.JLabel();
        fightStart = new javax.swing.JButton();
        infoAboutFightLabel = new javax.swing.JLabel();
        mageLev2 = new javax.swing.JButton();
        hunterLev2 = new javax.swing.JButton();
        warriorLev2 = new javax.swing.JButton();
        mageLev3 = new javax.swing.JButton();
        hunterLev3 = new javax.swing.JButton();
        warriorLev3 = new javax.swing.JButton();
        mageLev4 = new javax.swing.JButton();
        hunterLev4 = new javax.swing.JButton();
        warriorLev4 = new javax.swing.JButton();
        mageLev5 = new javax.swing.JButton();
        hunterLev5 = new javax.swing.JButton();
        warriorLev5 = new javax.swing.JButton();
        expProgressBar = new javax.swing.JProgressBar();
        levelLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        attackLabel.setText("Atak");

        HPLabel.setText("Punkty Życia");

        initiativeLabel.setText("Inicjatywa");

        addAttackButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        addAttackButton.setText("+");
        addAttackButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addAttackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAttackButtonActionPerformed(evt);
            }
        });

        addHpButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        addHpButton.setText("+");
        addHpButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addHpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHpButtonActionPerformed(evt);
            }
        });

        addInitiativeButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        addInitiativeButton.setText("+");
        addInitiativeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addInitiativeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addInitiativeButtonActionPerformed(evt);
            }
        });

        numberOfAttackLabel.setText("0");

        numberOfHpLabel.setText("0");

        numberOfInitiativeLabel.setText("0");

        skillpoints.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        skillpoints.setText("Pozostałe punkty umiejętności: 10");

        playerProgressBar.setValue(100);

        playerPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/mage.png"))); // NOI18N
        playerPicture.setName(""); // NOI18N

        enemyProgressBar.setValue(100);

        enemyPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/mage.png"))); // NOI18N

        playerName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerName.setText("Nazwa");
        playerName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        enemyPlayerName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        enemyPlayerName.setText("Wróg");
        enemyPlayerName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        mageLev1.setBackground(new java.awt.Color(255, 51, 51));
        mageLev1.setText("Poziom 1");
        mageLev1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mageLev1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mageLev1ActionPerformed(evt);
            }
        });

        hunterLev1.setBackground(new java.awt.Color(0, 204, 102));
        hunterLev1.setText("Poziom 1");
        hunterLev1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hunterLev1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hunterLev1ActionPerformed(evt);
            }
        });

        warriorLev1.setBackground(new java.awt.Color(255, 153, 51));
        warriorLev1.setText("Poziom 1");
        warriorLev1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        warriorLev1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warriorLev1ActionPerformed(evt);
            }
        });

        mages.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        mages.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mages.setText("Magowie");
        mages.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        hunters.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        hunters.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hunters.setText("Tropiciele");
        hunters.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        warriors.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        warriors.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        warriors.setText("Wojownicy");
        warriors.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        characterClass.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        characterClass.setText("Klasa postaci");
        characterClass.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        ball.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/ball.png"))); // NOI18N

        fightStart.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fightStart.setText("Start");
        fightStart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fightStart.setEnabled(false);
        fightStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fightStartActionPerformed(evt);
            }
        });

        infoAboutFightLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        infoAboutFightLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        infoAboutFightLabel.setText("informacje o walce");
        infoAboutFightLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        mageLev2.setBackground(new java.awt.Color(255, 51, 51));
        mageLev2.setText("Poziom 2");
        mageLev2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mageLev2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mageLev2ActionPerformed(evt);
            }
        });

        hunterLev2.setBackground(new java.awt.Color(0, 204, 102));
        hunterLev2.setText("Poziom 2");
        hunterLev2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hunterLev2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hunterLev2ActionPerformed(evt);
            }
        });

        warriorLev2.setBackground(new java.awt.Color(255, 153, 51));
        warriorLev2.setText("Poziom 2");
        warriorLev2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        warriorLev2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warriorLev2ActionPerformed(evt);
            }
        });

        mageLev3.setBackground(new java.awt.Color(255, 51, 51));
        mageLev3.setText("Poziom 3");
        mageLev3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mageLev3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mageLev3ActionPerformed(evt);
            }
        });

        hunterLev3.setBackground(new java.awt.Color(0, 204, 102));
        hunterLev3.setText("Poziom 3");
        hunterLev3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hunterLev3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hunterLev3ActionPerformed(evt);
            }
        });

        warriorLev3.setBackground(new java.awt.Color(255, 153, 51));
        warriorLev3.setText("Poziom 3");
        warriorLev3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        warriorLev3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warriorLev3ActionPerformed(evt);
            }
        });

        mageLev4.setBackground(new java.awt.Color(255, 51, 51));
        mageLev4.setText("Poziom 4");
        mageLev4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mageLev4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mageLev4ActionPerformed(evt);
            }
        });

        hunterLev4.setBackground(new java.awt.Color(0, 204, 102));
        hunterLev4.setText("Poziom 4");
        hunterLev4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hunterLev4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hunterLev4ActionPerformed(evt);
            }
        });

        warriorLev4.setBackground(new java.awt.Color(255, 153, 51));
        warriorLev4.setText("Poziom 4");
        warriorLev4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        warriorLev4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warriorLev4ActionPerformed(evt);
            }
        });

        mageLev5.setBackground(new java.awt.Color(255, 51, 51));
        mageLev5.setText("Poziom 5");
        mageLev5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mageLev5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mageLev5ActionPerformed(evt);
            }
        });

        hunterLev5.setBackground(new java.awt.Color(0, 204, 102));
        hunterLev5.setText("Poziom 5");
        hunterLev5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hunterLev5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hunterLev5ActionPerformed(evt);
            }
        });

        warriorLev5.setBackground(new java.awt.Color(255, 153, 51));
        warriorLev5.setText("Poziom 5");
        warriorLev5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        warriorLev5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warriorLev5ActionPerformed(evt);
            }
        });

        expProgressBar.setMaximum(2000);

        levelLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        levelLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        levelLabel.setText("Poziom 1");
        levelLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(playerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(playerPicture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(playerProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ball, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(enemyPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(enemyPlayerName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(enemyProgressBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fightStart, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(247, 247, 247))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(mages, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(warriors, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(hunters, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(mageLev1)
                                        .addGap(18, 18, 18)
                                        .addComponent(warriorLev1)
                                        .addGap(18, 18, 18)
                                        .addComponent(hunterLev1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(mageLev2)
                                        .addGap(18, 18, 18)
                                        .addComponent(warriorLev2)
                                        .addGap(18, 18, 18)
                                        .addComponent(hunterLev2)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(mageLev3)
                                    .addGap(18, 18, 18)
                                    .addComponent(warriorLev3)
                                    .addGap(18, 18, 18)
                                    .addComponent(hunterLev3))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(mageLev4)
                                    .addGap(18, 18, 18)
                                    .addComponent(warriorLev4)
                                    .addGap(18, 18, 18)
                                    .addComponent(hunterLev4))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(mageLev5)
                                    .addGap(18, 18, 18)
                                    .addComponent(warriorLev5)
                                    .addGap(18, 18, 18)
                                    .addComponent(hunterLev5)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(infoAboutFightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(initiativeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(HPLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(attackLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(numberOfAttackLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(numberOfHpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(numberOfInitiativeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addAttackButton)
                            .addComponent(addInitiativeButton)
                            .addComponent(addHpButton)))
                    .addComponent(skillpoints, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(characterClass, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(expProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(levelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(skillpoints)
                    .addComponent(mages, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hunters, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(warriors, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mageLev1)
                            .addComponent(warriorLev1)
                            .addComponent(hunterLev1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mageLev2)
                            .addComponent(warriorLev2)
                            .addComponent(hunterLev2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mageLev3)
                            .addComponent(warriorLev3)
                            .addComponent(hunterLev3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mageLev4)
                            .addComponent(warriorLev4)
                            .addComponent(hunterLev4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mageLev5)
                            .addComponent(warriorLev5)
                            .addComponent(hunterLev5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(addHpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addInitiativeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(numberOfAttackLabel)
                                            .addComponent(attackLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(7, 7, 7))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(addAttackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(HPLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numberOfHpLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(initiativeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numberOfInitiativeLabel))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(levelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(expProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(characterClass)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ball)
                        .addGap(114, 114, 114)
                        .addComponent(fightStart, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(playerPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(playerProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(playerName))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(enemyPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(enemyProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(enemyPlayerName))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(infoAboutFightLabel)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Fields declaration
    private Player player;
    private Player enemy;
    public static String playerNameStr;
    public static String characterClassStr;
            
    private Mage[] magesArray;
    private Warrior[] warriorsArray;
    private Hunter[] huntersArray;
    
    private static final int delay = 15;
    private Timer timer;
    
    private final String[] resourceName = {
        "/Resources/mage.png",
        "/Resources/warrior.png",
        "/Resources/hunter.png"
    };
    
    private final String[][] enemyName = {
        {"Nowicjusz", "Giermek", "Leśniczy"},
        {"Uczeń", "Rycerz", "Łucznik"},
        {"Adept", "Berserker", "Piotruś Pan"},
        {"Mistrz", "Bloody Night", "Legolas"},
        {"Arcymistrz", "Koszmar", "Galadriela"}
    };
    
    private final int[] MAX_EXP = { 
        2000, 3500, 6000, 9000, 11000, 14000, 29000, 50000, 100000
    };
   
    //methods definitions
    public void createEnemies() {
        magesArray = new Mage[]{
            new Mage(10, 50, 1),
            new Mage(30, 150, 3),
            new Mage(60, 500, 6),
            new Mage(140, 1200, 10),
            new Mage(200, 1700, 15)
        };
        
        warriorsArray = new Warrior[]{
            new Warrior(7, 100, 3),
            new Warrior(15, 300, 6),
            new Warrior(30, 800, 8),
            new Warrior(70, 2000, 12),
            new Warrior(90, 5000, 20)
        };
        
        huntersArray = new Hunter[]{
            new Hunter(5, 130, 3),
            new Hunter(20, 310, 6),
            new Hunter(40, 700, 9),
            new Hunter(80, 1600, 14),
            new Hunter(150, 4000, 20)
        };
    }
    
    private void createCharacter() {
        if(characterClass.getText().equals("Wojownik")) {
            player = new Warrior(10, 10, 0);
            playerPicture.setIcon(new ImageIcon(getClass().getResource(resourceName[1])));
        }
        else if(characterClass.getText().equals("Mag")) {
            player = new Mage(10, 10, 0);
            playerPicture.setIcon(new ImageIcon(getClass().getResource(resourceName[0])));
        }
        else if(characterClass.getText().equals("Tropiciel")) {
            player = new Hunter(10, 10, 0);
            playerPicture.setIcon(new ImageIcon(getClass().getResource(resourceName[2])));
        }              
    }
    
    public void setProgressBars() {
        playerProgressBar.setMaximum(player.getHp());
        playerProgressBar.setValue(player.getHp());
        
        enemyProgressBar.setMaximum(enemy.getHp());
        enemyProgressBar.setValue(enemy.getHp());        
    }
    
    private void updateSkillpoints() {       
        StringBuilder updateText = new StringBuilder("Pozostałe punkty umiejętności: "); 
        updateText.append(player.getAmountOfSkills());
        skillpoints.setText(updateText.toString());
        
        addAttackButton.setEnabled(true);
        addHpButton.setEnabled(true);
        addInitiativeButton.setEnabled(true);
    }
    
    public void addSkillHandler(javax.swing.JLabel amountOfSkillLabel) {
                
        if(player.getAmountOfSkills() > 0) {
            Integer amount = Integer.parseInt(amountOfSkillLabel.getText()) + 1;
            amountOfSkillLabel.setText(amount.toString());
            
            player.setAmountOfSkills(player.getAmountOfSkills() - 1);
            updateSkillpoints();
        } 
        if(player.getAmountOfSkills() == 0){
            addAttackButton.setEnabled(false);
            addHpButton.setEnabled(false);
            addInitiativeButton.setEnabled(false);
        }
    }
    
 
    private void addAttackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAttackButtonActionPerformed
        
        addSkillHandler(numberOfAttackLabel);
        player.setAttack(player.getAttack() + 5);
        
    }//GEN-LAST:event_addAttackButtonActionPerformed

    private void addHpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHpButtonActionPerformed
        
        addSkillHandler(numberOfHpLabel);   
        player.setHp(player.getHp() + 10);
        
    }//GEN-LAST:event_addHpButtonActionPerformed

    private void addInitiativeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addInitiativeButtonActionPerformed
        
        addSkillHandler(numberOfInitiativeLabel); 
        player.setInitiative(player.getInitiative()+ 1); 
        
    }//GEN-LAST:event_addInitiativeButtonActionPerformed

    private void warriorLev1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warriorLev1ActionPerformed
        
        prepareFightHandler(resourceName[1], enemyName[0][1], "wojownik", 1, warriorsArray[0],250);       
        
    }//GEN-LAST:event_warriorLev1ActionPerformed

    private void gainExperience() {
        player.setXp(player.getXp() + enemy.getXp());
        
        if(player.getXp() >= expProgressBar.getMaximum()) {
            expProgressBar.setMaximum(MAX_EXP[player.getLevel()]);
            expProgressBar.setValue(0);
            player.setLevel(player.getLevel() + 1);
            levelLabel.setText(String.format("Poziom %d", player.getLevel()));
            player.setXp(0);
            player.setAmountOfSkills(player.getAmountOfSkills() + 5);
            updateSkillpoints();            
            player.promotion();
            infoAboutFightLabel.setText("Awansowałeś na kolejny poziom! Otrzymujesz 5 punktów umiejętności");
        }
        
        expProgressBar.setValue(player.getXp());
        
        
    }
    
    private void disableButtons() {
        addAttackButton.setEnabled(false);
        addHpButton.setEnabled(false);
        addInitiativeButton.setEnabled(false);
        mageLev1.setEnabled(false);
        warriorLev1.setEnabled(false);
        hunterLev1.setEnabled(false);
        mageLev2.setEnabled(false);
        warriorLev2.setEnabled(false);
        hunterLev2.setEnabled(false);
        mageLev3.setEnabled(false);
        warriorLev3.setEnabled(false);
        hunterLev3.setEnabled(false);
        mageLev4.setEnabled(false);
        hunterLev4.setEnabled(false);
        warriorLev4.setEnabled(false);       
        mageLev5.setEnabled(false);
        warriorLev5.setEnabled(false);
        hunterLev5.setEnabled(false);
        
    }
    
    private void enablePreparingButtons() {        
        addAttackButton.setEnabled(true);
        addHpButton.setEnabled(true);
        addInitiativeButton.setEnabled(true);
        mageLev1.setEnabled(true);
        warriorLev1.setEnabled(true);
        hunterLev1.setEnabled(true);
        mageLev2.setEnabled(true);
        warriorLev2.setEnabled(true);
        hunterLev2.setEnabled(true);
        mageLev3.setEnabled(true);
        warriorLev3.setEnabled(true);
        hunterLev3.setEnabled(true);
        mageLev4.setEnabled(true);
        warriorLev4.setEnabled(true);
        hunterLev4.setEnabled(true);
        mageLev5.setEnabled(true);
        warriorLev5.setEnabled(true);
        hunterLev5.setEnabled(true);
    }
    private void addSkillpoint() {
        player.setAmountOfSkills(player.getAmountOfSkills() + 1);
        updateSkillpoints();
        enablePreparingButtons();
    }
    
    private int getPriority() {
        if(player.getInitiative() >= enemy.getInitiative()) {
            return 10;
        }
        else return -10;
    }
    
    ActionListener fightHandler() throws CloneNotSupportedException {

        disableButtons();
        
        Player clonedPlayer = (Player)player.clone();
        Player clonedEnemy = (Player)enemy.clone();               
        
        ActionListener fightPerformer = new ActionListener() {
            int move = getPriority();
                                   
            @Override
            public void actionPerformed(ActionEvent evt1) {                            
                //ball moves                
                ball.setLocation(ball.getLocation().x + move, ball.getLocation().y);
                
                //enemy was attacked
                if(ball.getLocation().x > enemyPicture.getLocation().x - 10) {
                    clonedEnemy.attack(clonedEnemy, clonedPlayer);                    
                    
                    if(clonedEnemy.getHp() <= 0) {
                        enemyProgressBar.setValue(0);
                        setProgressBars();
                        move = -move;
                        addSkillpoint();                         
                        infoAboutFightLabel.setText("Wygrałeś walkę! Otrzymujesz punkt umiejętności i punkty doświadczenia");
                        gainExperience();
                        timer.stop();
                        
                    }
                    enemyProgressBar.setValue(clonedEnemy.getHp());                                        
                    move = -move; 
                }
                
                //player was attacked
                if(ball.getLocation().x < playerPicture.getLocation().x + playerPicture.getWidth() + 10) {
                    clonedPlayer.attack(clonedPlayer, clonedEnemy);
                    
                    if(clonedPlayer.getHp() <= 0) {
                        playerProgressBar.setValue(0);
                        setProgressBars();
                        move = -move;  
                        enablePreparingButtons();
                        infoAboutFightLabel.setText("Przegrałeś walkę! Spróbuj jeszcze raz!");
                        timer.stop();
                    }
                    playerProgressBar.setValue(clonedPlayer.getHp());
                    move = -move;                    
                }                                                  
            }
        };
        return fightPerformer;
    }
    
    private void prepareFightHandler(String resName, String enemyNameLocal, String className, int level,Player specificEnemy, int xp) {
        enemyPicture.setIcon(new ImageIcon(getClass().getResource(resName)));
        enemyPlayerName.setText(enemyNameLocal);        
        infoAboutFightLabel.setText(String.format("Twoim wrogiem będzie %s na %d poziomie! Naciśnij start!", className, level));
        fightStart.setEnabled(true);
        enemy = specificEnemy;
        enemy.setXp(xp);
        setProgressBars(); 
    }
    
    private void mageLev1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mageLev1ActionPerformed
        
        prepareFightHandler(resourceName[0], enemyName[0][0], "mag", 1, magesArray[0], 200);        
        
    }//GEN-LAST:event_mageLev1ActionPerformed

    private void hunterLev1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hunterLev1ActionPerformed
        
        prepareFightHandler(resourceName[2], enemyName[0][2], "tropiciel", 1, huntersArray[0], 300);  
        
    }//GEN-LAST:event_hunterLev1ActionPerformed

    private void fightStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fightStartActionPerformed
        
        try {
            timer = new Timer(delay, fightHandler());
        } catch (CloneNotSupportedException ex) {
            Logger.getLogger(gameBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
        fightStart.setEnabled(false);
        timer.start();
        
    }//GEN-LAST:event_fightStartActionPerformed

    private void mageLev2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mageLev2ActionPerformed
        
        prepareFightHandler(resourceName[0], enemyName[1][0], "mag", 2, magesArray[1], 500); 
        
    }//GEN-LAST:event_mageLev2ActionPerformed

    private void hunterLev2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hunterLev2ActionPerformed
        
        prepareFightHandler(resourceName[2], enemyName[1][2], "tropiciel", 2, huntersArray[1], 600); 
        
    }//GEN-LAST:event_hunterLev2ActionPerformed

    private void warriorLev2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warriorLev2ActionPerformed
        
        prepareFightHandler(resourceName[1], enemyName[1][1], "wojownik", 2, warriorsArray[1], 550); 
        
    }//GEN-LAST:event_warriorLev2ActionPerformed

    private void mageLev3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mageLev3ActionPerformed
        
        prepareFightHandler(resourceName[0], enemyName[2][0], "mag", 3, magesArray[2], 800); 
        
    }//GEN-LAST:event_mageLev3ActionPerformed

    private void hunterLev3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hunterLev3ActionPerformed
        
        prepareFightHandler(resourceName[2], enemyName[2][2], "tropiciel", 3, huntersArray[2],1000); 
        
    }//GEN-LAST:event_hunterLev3ActionPerformed

    private void warriorLev3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warriorLev3ActionPerformed
       
        prepareFightHandler(resourceName[1], enemyName[2][1], "wojownik", 3, warriorsArray[2], 1000);
        
    }//GEN-LAST:event_warriorLev3ActionPerformed

    private void mageLev4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mageLev4ActionPerformed
        
        prepareFightHandler(resourceName[0], enemyName[3][0], "mag", 4, magesArray[3], 1500); 
        
    }//GEN-LAST:event_mageLev4ActionPerformed

    private void hunterLev4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hunterLev4ActionPerformed
       
        prepareFightHandler(resourceName[2], enemyName[3][2], "tropiciel", 4, huntersArray[3],2300); 
        
    }//GEN-LAST:event_hunterLev4ActionPerformed

    private void warriorLev4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warriorLev4ActionPerformed
        
        prepareFightHandler(resourceName[1], enemyName[3][1], "wojownik", 4, warriorsArray[3],2200);
        
    }//GEN-LAST:event_warriorLev4ActionPerformed

    private void mageLev5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mageLev5ActionPerformed
        
        prepareFightHandler(resourceName[0], enemyName[4][0], "mag", 5, magesArray[4], 3000);
        
    }//GEN-LAST:event_mageLev5ActionPerformed

    private void hunterLev5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hunterLev5ActionPerformed
        
        prepareFightHandler(resourceName[2], enemyName[4][2], "tropiciel", 5, huntersArray[4], 4000); 
        
    }//GEN-LAST:event_hunterLev5ActionPerformed

    private void warriorLev5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warriorLev5ActionPerformed
       
        prepareFightHandler(resourceName[1], enemyName[4][1], "wojownik", 5, warriorsArray[4], 3500);
        
    }//GEN-LAST:event_warriorLev5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        playerNameStr = args[0];
        characterClassStr = args[1];
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new gameBoard().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HPLabel;
    private javax.swing.JButton addAttackButton;
    private javax.swing.JButton addHpButton;
    private javax.swing.JButton addInitiativeButton;
    private javax.swing.JLabel attackLabel;
    private javax.swing.JLabel ball;
    private javax.swing.JLabel characterClass;
    private javax.swing.JLabel enemyPicture;
    private javax.swing.JLabel enemyPlayerName;
    private javax.swing.JProgressBar enemyProgressBar;
    private javax.swing.JProgressBar expProgressBar;
    private javax.swing.JButton fightStart;
    private javax.swing.JButton hunterLev1;
    private javax.swing.JButton hunterLev2;
    private javax.swing.JButton hunterLev3;
    private javax.swing.JButton hunterLev4;
    private javax.swing.JButton hunterLev5;
    private javax.swing.JLabel hunters;
    private javax.swing.JLabel infoAboutFightLabel;
    private javax.swing.JLabel initiativeLabel;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JButton mageLev1;
    private javax.swing.JButton mageLev2;
    private javax.swing.JButton mageLev3;
    private javax.swing.JButton mageLev4;
    private javax.swing.JButton mageLev5;
    private javax.swing.JLabel mages;
    private javax.swing.JLabel numberOfAttackLabel;
    private javax.swing.JLabel numberOfHpLabel;
    private javax.swing.JLabel numberOfInitiativeLabel;
    private javax.swing.JLabel playerName;
    private javax.swing.JLabel playerPicture;
    private javax.swing.JProgressBar playerProgressBar;
    private javax.swing.JLabel skillpoints;
    private javax.swing.JButton warriorLev1;
    private javax.swing.JButton warriorLev2;
    private javax.swing.JButton warriorLev3;
    private javax.swing.JButton warriorLev4;
    private javax.swing.JButton warriorLev5;
    private javax.swing.JLabel warriors;
    // End of variables declaration//GEN-END:variables
}
